<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
		xmlns:xs="http://www.w3.org/2001/XMLSchema" 
		elementFormDefault="qualified"
		targetNamespace="https://www.trespass-project.eu/schemas/TREsPASS_model"
		xmlns="https://www.trespass-project.eu/schemas/TREsPASS_model"
>
	<!--.......................................-->
	<!-- system is the root node -->
	<!--.......................................-->
	<xs:element name="system">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="title" />
				<xs:element minOccurs="0" name="locations" type="locationType" />
				<xs:element minOccurs="0" name="edges" type="edgeType" />
				<xs:element minOccurs="0" name="assets" type="assetType" />
				<xs:element minOccurs="0" name="actors" type="actorsType" />
				<xs:element minOccurs="0" name="policies" type="policyType" />
				<xs:element minOccurs="0" name="processes" type="processType" />
				<xs:element minOccurs="0" name="predicates" type="predicatesType" />
				<xs:element minOccurs="0" name="metrics" type="metricsType" />
			</xs:sequence>
			<xs:attribute name="author" use="required" />
			<xs:attribute name="date" use="required" />
			<xs:attribute name="version" use="required" />
			<xs:attribute name="id" use="required" />
			<xs:attribute name="anm_data" use="optional" />
		</xs:complexType>
	</xs:element>
	<!--..................................................................-->
	<!-- locations have an id and some attributes -->
	<!--..................................................................-->
	<xs:complexType name="locationType" >
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="location" >
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:element name="atLocations" type="xs:IDREFS" />
					</xs:sequence>
					<xs:attribute name="id" type="xs:ID" use="required" />
					<!-- <xs:attribute name="domain" type="locationDomain" use="optional" /> -->
					<!-- <xs:attribute name="type" type="xs:string" /> -->
					<!-- <xs:attribute name="group" type="xs:string" /> -->
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="locationDomain">
		<xs:restriction base="xs:string">
			<xs:enumeration value="physical" />
			<xs:enumeration value="cyber" />
			<xs:enumeration value="other" />
		</xs:restriction>
	</xs:simpleType>
	<!--..................................................................-->
	<!-- edges have a src and a tgt and a kind      -->
	<!-- edges are directed by default                    -->
	<!--..................................................................-->
	<xs:complexType name="edgeType" >
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="edge" >
				<xs:complexType>
					<xs:sequence>
						<xs:element name="source" type="xs:IDREF" />
						<xs:element name="target" type="xs:IDREF" />
					</xs:sequence>
					<xs:attribute name="directed" type="xs:boolean" default="true" />
					<xs:attribute name="kind" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--..................................................................-->
	<!-- assets are items or data                            -->
	<!--..................................................................-->
	<xs:complexType name="assetType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="item" type="itemType" />
				<xs:element name="data" type="dataType" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<!--....................................................................................................-->
	<!-- items have a name and an id and are located at other locations -->
	<!--.....................................................................................................-->
	<xs:complexType name="itemType" >
		<xs:sequence>
			<xs:element name="atLocations" type="xs:IDREFS" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="id" type="xs:ID" use="required" />
		<xs:attribute name="type" type="xs:string"/>
	</xs:complexType>
	<!--....................................................................................................-->
	<!-- data has a name and an id and is located at other locations      -->
	<!-- data also has a value                                                                   -->
	<!--.....................................................................................................-->
	<xs:complexType name="dataType" >
		<xs:sequence>
			<xs:element name="atLocations" type="xs:IDREFS" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="id" type="xs:ID" use="required" />
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--....................................................................................................-->
	<!-- actors have an id and are located at other locations                    -->
	<!--.....................................................................................................-->
	<xs:complexType name="actorsType" >
		<xs:sequence>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="actor" type="actorType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="actorType" >
		<xs:sequence>
			<xs:element name="atLocations" type="xs:IDREFS" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required" />
	</xs:complexType>
	<!--....................................................................................................-->
	<!-- policies have a set of credentials and a set of enabled actions   -->
	<!-- policies are located at locations                                                  -->
	<!--.....................................................................................................-->
	<xs:complexType name="policyType" >
		<xs:sequence>
		<xs:element minOccurs="0" maxOccurs="unbounded" name="policy" >
			<xs:complexType>
				<xs:sequence> 
					<xs:element name="credentials" >
						<xs:complexType>
							<xs:sequence minOccurs="0" maxOccurs="unbounded" >
								<xs:choice>
						<xs:element name="credLocation" type ="credLocationType" />
									<xs:element name="credItem" type="credItemType" />
									<xs:element name="credData" type="credDataType" />
									<xs:element name="credPredicate" type="credPredicateType" />
								</xs:choice>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="enabled" type="actionsType" />
					<xs:element name="atLocations" type="xs:IDREFS" />
				</xs:sequence>
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:complexType>
		</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--....................................................................................................-->
	<!-- credential elements                                                                     -->
	<!--.....................................................................................................-->
	<xs:complexType name="credLocationType" >
		<xs:attribute name="id" type="xs:IDREF" use="required" />
	</xs:complexType>
	<xs:complexType name="credDataType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="value" type="xs:string" />
				<xs:element name="variable" type="xs:string" />
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="credItemType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="credData" type="credDataType" />
				<xs:element name="credItem" type="credItemType" />
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="credPredicateType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="variable" type="xs:string" />
				<xs:element name="value" type="xs:string" />
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="name" use="required" />
	</xs:complexType>
	<!--........................................................................................................-->
	<!-- processes                                                                                        -->
	<!--........................................................................................................-->  
	<xs:complexType name="processType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:element name="process" >
				<xs:complexType>
					<xs:sequence>
						<xs:element name="actions" type="actionsType" />
						<xs:element name="atLocations" type="xs:IDREFS" />
					</xs:sequence>
						<xs:attribute name="id" type="xs:ID" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="actionsType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="in" type="inOutType" />
				<xs:element name="out" type="inOutType" />
				<xs:element name="move" />
				<xs:element name="eval" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="inOutType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="value" type="xs:string" />
				<xs:element name="wildcard" />
				<xs:element name="variable" type="xs:string" />
				<xs:element name="tuple" type="tupleType" />
			</xs:choice>
		</xs:sequence>
			<xs:attribute name="loc" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:complexType name="tupleType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:choice>
				<xs:element name="value" type="xs:string" />
				<xs:element name="wildcard" />
				<xs:element name="variable" type="xs:string" />
				<xs:element name="tuple" type="tupleType" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<!--........................................................................................................-->
	<!-- predicates specify properties of locations, actors, etc                   -->
	<!--........................................................................................................-->  
	<xs:simpleType name="stringlist">
		<xs:list itemType="xs:string" />
	</xs:simpleType>
	<xs:complexType name="predicatesType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:element name="predicate" >
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded" >
						<xs:element name="value" type="stringlist" />
					</xs:sequence>
					<xs:attribute name="id" type="xs:ID" use="required" />
					<xs:attribute name="arity" type="xs:int" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--........................................................................................................-->
	<!-- metrics specify numbers for a name and an optional namespace  -->
	<!--........................................................................................................-->  
	<xs:complexType name="metricsType" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded" >
			<xs:element name="metric" >
				<xs:complexType>
					<xs:attribute name="namespace" />
					<xs:attribute name="name" use="required" />
					<xs:attribute name="value" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
